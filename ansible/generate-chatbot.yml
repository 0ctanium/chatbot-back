---
- name: Init chatbot server

  hosts: localhost

  vars_files:

  vars:
    - gitDir: '/var/www/git/'
    - appsDir: '/var/www'
    - backDir: 'chatbot-back'
    - botDir: 'chatbot-template'
    - frontDir: 'chatbot-front'
    - webchatDir: 'webchat'

  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: 'yes'
        update_cache: 'yes'

    - name: Ansible galaxy install elastic.beats role
      shell: 'ansible-galaxy install elastic.beats,v7.10.1'

    - name: Install last Nginx version
      include_tasks: "nginx-tasks.yml"
      when: updateFront

    - name: Set right rights on www directory
      file:
        path: '{{appsDir}}'
        group: www-data
        mode: '774'
        recurse: yes

    - name: Copy chatbot-back
      synchronize:
        src: '{{ gitDir }}/{{ backDir }}/'
        dest: '{{ appsDir }}/{{ backDir }}'
        rsync_opts:
          - '--exclude=mediatheque/'
          - '--exclude=historic/'
      when: updateBack

    - name: Copy env-file
      copy:
        src: '{{ gitDir }}/.env'
        dest: '{{ appsDir }}/{{ backDir }}/.env'
      when: updateBack

    - name: Copy chatbot-front
      synchronize:
        src: '{{ gitDir }}/{{ frontDir }}/dist/{{ frontDir }}/'
        dest: '{{ appsDir }}/{{ frontDir }}'
        delete: yes
      when: updateFront

    - name: Copy webchat
      synchronize:
        src: '{{ gitDir }}/{{ frontDir }}/dist/{{ webchatDir }}/'
        dest: '{{ appsDir }}/{{ webchatDir }}'
        delete: yes
      when: updateFront

    - name: copy the nginx config file
      copy:
        src: '{{ gitDir }}/nginx.conf'
        dest: '/etc/nginx/nginx.conf'
      become: yes
      when: updateFront

    - name: copy the nginx site config file
      copy:
        src: '{{ gitDir }}/nginx_conf.cfg'
        dest: '/etc/nginx/conf.d/default.conf'
      when: updateFront

    - name: add server name to the nginx site config file
      lineinfile:
        path: '/etc/nginx/conf.d/default.conf'
        insertbefore : '^    location / {'
        line: '    server_name  {{ botDomain }};'
      when: updateFront and botDomain

    - name: restart nginx
      service:
        name: nginx
        state: restarted
      when: updateFront

    - name: Install SSL certificate
      command:
        cmd: 'certbot --nginx -d {{ botDomain }} -n --redirect --agree-tos -m vincent.laine@beta.gouv.fr'
      when: updateFront and botDomain

    - name: Close port 80 after SSL certificate
      become: yes
      ufw:
        rule: deny
        port: '80'
        proto: tcp
      when: updateFront and botDomain

    - name: Update certbot conf to use TLS 1.2
      become: true
      lineinfile:
        path: '/etc/letsencrypt/options-ssl-nginx.conf'
        regexp: '^ssl_protocols TLSv1 TLSv1.1 TLSv1.2;'
        line: 'ssl_protocols TLSv1.2 TLSv1.3;'
      when: updateFront and botDomain

    - name: Update nginx site conf to use http2
      become: true
      lineinfile:
        path: '/etc/nginx/conf.d/default.conf'
        regexp: '^    listen \[::]:443 ssl ipv6only=on;'
        line: '    listen [::]:443 ssl http2 ipv6only=on;'
      when: updateFront and botDomain

    - name: Update nginx site conf to use http2
      become: true
      lineinfile:
        path: '/etc/nginx/conf.d/default.conf'
        regexp: '^    listen 443 ssl;'
        line: '    listen 443 ssl http2;'
      when: updateFront and botDomain

    - name: Install RASA version
      pip:
        executable: pip3
        name:
          - rasa==2.7.0
          - psycopg2-binary
          - python-socketio==5.3.0
      when: updateRasa

    - name: Copy chatbot-template
      synchronize:
        src: '{{ gitDir }}/{{ botDir }}/'
        dest: '{{ appsDir }}/{{ botDir }}'
        rsync_opts:
          - '--exclude=models/'
      when: updateRasa

    - name: npm install chatbot-back
      command:
        cmd: npm install
        chdir: '{{ appsDir }}/{{ backDir }}'
      when: updateBack

    - name: npm build chatbot-back
      command:
        cmd: 'npm run build'
        chdir: '{{ appsDir }}/{{ backDir }}'
      when: updateBack

    - name: npm copy env file
      command:
        cmd: 'npm run copy'
        chdir: '{{ appsDir }}/{{ backDir }}'
      when: updateBack

    - name: Copy endpoints.yml rasa file
      copy:
        src: '{{ appsDir }}/{{ botDir }}/endpoints.example.yml'
        dest: '{{ appsDir }}/{{ botDir }}/endpoints.yml'
        remote_src: yes
      when: updateRasa

    - name: Update endpoints.yml rasa file
      lineinfile:
        path: '{{ appsDir }}/{{ botDir }}/endpoints.yml'
        regexp: '^  password:'
        line: '  password: "{{ DB_PASSWORD }}"'
      when: updateRasa

    - name: Train rasa
      command:
        chdir: '{{ appsDir }}/{{ botDir }}/'
        cmd: 'rasa train --num-threads 8'
      when: updateRasa

    - name: Stop rasa chatbot
      command: 'pkill screen'
      ignore_errors: true
      when: updateRasa

    - name: Start rasa chatbot
      command:
        chdir: '{{ appsDir }}/{{ botDir }}/'
        cmd: 'screen -S rasa -dmS rasa run -m models --log-file out.log --cors "*" --debug'
      when: updateRasa

    - name: copy rc.local file to restart bot on boot
      copy:
        src: '{{ gitDir }}/rc.local'
        dest: '/etc/rc.local'
      when: updateRasa

    - name: Set right rights on rc.local file
      when: updateRasa
      file:
        path: '/etc/rc.local'
        mode: '755'
